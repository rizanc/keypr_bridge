<project name="MicrosAdapter" default="microsAdapterDist" basedir=".">
	<description>
        simple example build file
    </description>
	<!-- set global properties for this build -->
	<property name="micros.adapter.src" location="./src" />
	<property name="micros.adapter.res" location="src/main/resources" />
	<property name="micros.adapter.lib" location="./lib" />
	<property name="micros.adapter.logs" location="./logs" />
	<property name="micros.adapter.build" location="./build" />
	<property name="micros.adapter.build.res" location="${micros.adapter.build}/res" />
	<property name="micros.adapter.build.lib" location="${micros.adapter.build}/lib" />
	<property name="micros.adapter.build.logs" location="${micros.adapter.build}/logs" />
	<property name="micros.adapter.dist" location="./dist" />
	<property name="micros.adapter.dist.lib" location="${micros.adapter.dist}/lib" />
	<property name="adapter.project.dir.lib" location="../CloudKeyTestAdapter/lib" />
	<property name="webservice.client.project.dir.lib" location="../CloudKeyPrWebServiceClient/WebContent/WEB-INF/lib" />
	<property name="webservice.project.dir.lib" location="../CloudKeyHTWebServices/WebContent/WEB-INF/lib" />
	<property name="dataharvester.project.dir.lib" location="../MicrosDataHarvester/lib" />
	<property name="microssimulator.oxi.project.dir.lib" location="../MicrosSimulator_OXI/WebContent/WEB-INF/lib" />
	<property name="microssimulator.ows.project.dir.lib" location="../MicrosSimulatorPMS_OWS/WebContent/WEB-INF/lib" />
	<property name="uploadservice.client.project.dir.lib" location="../UploadServiceRest/src/main/webapp/WEB-INF/lib" />
	<property name="upload.service.project.dir.lib" location="../CloudKeyHTUploadService/lib" />
	<property name="micros.adapter.project.dir.lib" location="../MicrosPMSAdapter/lib" />


	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${micros.adapter.build}" />
		<mkdir dir="${micros.adapter.build.res}" />
		<mkdir dir="${micros.adapter.build.lib}" />
		<mkdir dir="${micros.adapter.build.logs}" />
		<!-- Create the distribution directory -->
		<mkdir dir="${micros.adapter.dist.lib}" />
	</target>
	<!-- set the class path to compile -->
	<path id='compile.classpath'>
		<fileset dir='lib'>
			<include name='*.jar' />
		</fileset>
	</path>

	<!-- To delete the folders created on initialization -->
	<target name="clean" description="clean up">
		<!-- Delete the ${micros.adapter.build} and ${micros.adapter.dist} directory trees -->
		<delete dir="${micros.adapter.build}" />
		<delete dir="${micros.adapter.dist}" />
	</target>

	<!-- To compile source and add required files to be included in jar -->
	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${micros.adapter.src} into ${micros.adapter.build} -->
		<javac includeantruntime="false" debug="true" srcdir="${micros.adapter.src}" destdir="${micros.adapter.build}">
			<classpath refid="compile.classpath" />
		</javac>
	<!-- Copy the lib folder to be included in jar  -->
		<copy todir="${micros.adapter.build}/lib">
			<fileset dir="${micros.adapter.lib}">
				<include name="*.jar" />
				<type type="file" />
			</fileset>
		</copy>
		<!-- Copy the res folder to be included in jar  -->
				<copy todir="${micros.adapter.build.res}">
					<fileset dir="/src/main/res">
						<include name="*.*" />
						<type type="file" />
					</fileset>
				</copy>
		
		<!-- Copy the logs folder to be included in jar  -->
				<copy todir="${micros.adapter.build}/logs">
					<fileset dir="${micros.adapter.logs}">
						<include name="*.*" />
						<type type="file" />
					</fileset>
				</copy>
	</target>

	<target name="microsAdapterDist" depends="clean,init,compile" description="generate the distribution">
		<!-- Put everything in ${micros.adapter.build} into the micros.adapter.jar file -->
		<jar jarfile="${micros.adapter.dist}/lib/microsadapter.jar" basedir="${micros.adapter.build}" duplicate="preserve" />

	
		<!-- copy the microsadapter.jar to ${webservice.client.project.dir.lib} folder -->
		<copy todir="${webservice.client.project.dir.lib}" overwrite="true">
			<fileset dir="${micros.adapter.dist}/lib">
				<include name="*.jar" />
				<type type="file" />
			</fileset>
		</copy>
		<!-- copy the microsadapter.jar to ${webservice.project.dir.lib} folder -->
		<copy todir="${webservice.project.dir.lib}" overwrite="true">
			<fileset dir="${micros.adapter.dist}/lib">
				<include name="*.jar" />
				<type type="file" />
			</fileset>
		</copy>
	
		<!-- copy the microsadapter.jar to ${upload.service.project.dir.lib} folder -->
		<copy todir="${upload.service.project.dir.lib}" overwrite="true">
			<fileset dir="${micros.adapter.dist}/lib">
				<include name="*.jar" />
				<type type="file" />
			</fileset>
		</copy>

		<!-- copy the micros.adapter.jar to ${microssimulator.ows.project.dir.lib} folder -->
		<copy todir="${microssimulator.ows.project.dir.lib}" overwrite="true">
			<fileset dir="${micros.adapter.dist}/lib">
				<include name="*.jar" />
				<type type="file" />
			</fileset>
		</copy>
		<!-- copy the micros.adapter.jar to ${dataharvester.project.dir.lib} folder -->
		<copy todir="${dataharvester.project.dir.lib}" overwrite="true">
			<fileset dir="${micros.adapter.dist}/lib">
				<include name="*.jar" />
				<type type="file" />
			</fileset>
		</copy>
	</target>
</project>