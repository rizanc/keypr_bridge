<project name="DataHarvesterService" default="DHSDist" basedir=".">
	<description>
		This ant build file creates jar of DataHarvester Service. It places the created jar whererver
		it is required.
    </description>
	<!-- set global properties for this build -->
	<property name="dhs.src" location="./src" />
	<property name="dhs.res" location="./res" />
	<property name="dhs.lib" location="./lib" />
	<property name="dhs.logs" location="./logs" />
	<property name="dhs.build" location="./build" />
	
	<property name="dhs.build.res" location="${dhs.build}/res" />
	<property name="dhs.build.lib" location="${dhs.build}/lib" />
	<property name="dhs.build.logs" location="${dhs.build}/logs" />
	<property name="dhs.dist" location="./dist" />
	<property name="dhs.dist.lib" location="${dhs.dist}/lib" />
	
	<property name="adapter.project.dir.lib" location="../CloudKeyTestAdapter/lib" />
	<property name="webservice.client.project.dir.lib" location="../CloudKeyPrWebServiceClient/WebContent/WEB-INF/lib" />
	<property name="webservice.project.dir.lib" location="../CloudKeyHTWebServices/WebContent/WEB-INF/lib" />
	<property name="dataharvester.project.dir.lib" location="../MicrosDataHarvester/lib" />
	
	<property name="microssimulator.oxi.project.dir.lib" location="../MicrosSimulator_OXI/WebContent/WEB-INF/lib" />
	<property name="microssimulator.ows.project.dir.lib" location="../MicrosSimulatorPMS_OWS/WebContent/WEB-INF/lib" />
	<property name="uploadservice.client.project.dir.lib" location="../UploadServiceRest/WebContent/WEB-INF/lib" />
	<property name="upload.service.project.dir.lib" location="../CloudKeyHTUploadService/lib" />
	<property name="micros.adapter.project.dir.lib" location="../MicrosPMSAdapter/lib" />


	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${dhs.build}" />
		<mkdir dir="${dhs.build.res}" />
		<mkdir dir="${dhs.build.lib}" />
		<mkdir dir="${dhs.build.logs}" />
		<!-- Create the distribution directory -->
		<mkdir dir="${dhs.dist.lib}" />
	</target>
	<!-- set the class path to compile -->
	<path id="compile.classpath">
		<fileset dir='lib'>
			<include name='*.jar' />
		</fileset>
	</path>
	
	

	<!-- To delete the folders created on initialization -->
	<target name="clean" description="clean up">
		<!-- Delete the ${dhs.build} and ${dhs.dist} directory trees -->
		<delete dir="${dhs.build}" />
	</target>

	<!-- To compile source and add required files to be included in jar -->
	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${dhs.src} into ${dhs.build} -->
		<javac includeantruntime="false" debug="true" srcdir="${dhs.src}" destdir="${dhs.build}">
			<classpath refid="compile.classpath" />
		</javac>
		<!-- Copy the res folder to be included in jar  -->
		<copy todir="${dhs.build}/res">
			<fileset dir="${dhs.res}">
				<include name="*.*" />
				<type type="file" />
			</fileset>
		</copy>
		
		<!-- Copy the lib folder to be included in jar  -->
				<copy todir="${dhs.build}/lib">
					<fileset dir="${dhs.lib}">
						<include name="*.jar" />
						<type type="file" />
					</fileset>
				</copy>
		<!-- Copy the lib folder to be included in jar  -->
		<copy todir="${dhs.build}/logs">
			<fileset dir="${dhs.logs}">
				<include name="*.jar" />
				<type type="file" />
			</fileset>
		</copy>
		<manifestclasspath property="mf.classpath" jarfile="${dhs.dist}/lib/dhs.jar">
			    <classpath refid="compile.classpath" />
		</manifestclasspath>
	</target>

	<target name="DHSDist" depends="clean,init,compile" description="generate the distribution">
		<!-- Put everything in ${dhs.build} into the dhs.jar -->
		<jar jarfile="${dhs.dist}/lib/dhs.jar" basedir="${dhs.build}" duplicate="preserve">
			<manifest>
				<attribute name="Main-Class" value="com.micros.harvester.service.DataHarvesterService"/>
				<attribute name="Class-Path" value="${mf.classpath}"/>

			</manifest>
			<zipgroupfileset dir="${dhs.lib}" includes="**/*.jar" />
		</jar>
	</target>
	
</project>